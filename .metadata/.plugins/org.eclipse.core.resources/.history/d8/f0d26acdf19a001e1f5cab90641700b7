/*
 * fsm.c
 *
 *  Created on: Dec 11, 2023
 *      Author: thao2
 */


#include "main.h"
#include "software_timer.h"
#include "fsm.h"
#include "command.h"
#include "controlData.h"
#include "uart.h"

int communiation_mode = 0;
// variable for send data activity
// buffer to get ADC value
char str[20];
void uart_communication_fsm(){
	switch (communiation_mode) {
		case 0:
			// waiting for flag
			// flag can catch in waiting mode
			if (timer_flag == 1){
				setTimer(0);
				command_mode = 2;
				// Transfer Data
				HAL_UART_Transmit(&huart2, startData, 4, 1000);
				HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "%d\n", ADC_Value_buffer), 1000);
				HAL_UART_Transmit(&huart2, endData, 1, 1000);
				HAL_UART_Transmit(&huart2, &nl, 1, 100);
				HAL_UART_Transmit(&huart2, &nl, 1, 100);
				command_mode = 0;
				setTimer(0);
			}
			break;
		case 1:
			// get data from ADC
			HAL_ADC_Start(&hadc1);
			ADC_Value = HAL_ADC_GetValue(&hadc1);
			// Transfer Data
			HAL_UART_Transmit(&huart2, startData, 4, 1000);
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "%d\n", ADC_Value), 1000);
			HAL_UART_Transmit(&huart2, endData, 1, 1000);
			HAL_UART_Transmit(&huart2, &nl, 1, 100);
			HAL_UART_Transmit(&huart2, &nl, 1, 100);
			// set status environment
			ADC_Value_buffer = ADC_Value;
			communiation_mode = 0;
			command_mode = 0;
			setTimer(0);
			break;
		default:
			break;
	}
}

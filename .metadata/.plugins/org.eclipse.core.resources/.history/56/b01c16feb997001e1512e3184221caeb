/*
 * fsm.c
 *
 *  Created on: Dec 11, 2023
 *      Author: thao2
 */


#include "main.h"
#include "software_timer.h"
#include "fsm.h"
#include "controlData.h"

int command_mode = 0;
int communiation_mode = 0;
// variable for send data activity
char startData[] = "!ADC";
char endData[] = "#";
// variable for new line transmit uart activity
uint8_t nl = 0x0D;
// buffer to get ADC value
char str[20];
uint32_t ADC_Value = 0;



void command_parser_fsm(){
	switch (command_mode) {
		case 0:
			// check input for "!RST#"
			if (buffer[0] == '!' && buffer[1] == 'R' && buffer[2] == 'S' && buffer[3] == 'T' && buffer[4] == '#') {
				setTimer(300); // set timer for waiting, after 3s set flag to 1
				command_mode = 1;
			}
			break;
		case 1:
			// check input "!OK#
			if (buffer[0] == '!' && buffer[1] == 'O' && buffer[2] == 'K' && buffer[3] == '#'){
				setTimer(0); // reset flag and timer
				command_mode = 3; // == default
				communiation_mode = 1;
			}
			break;
		default:
			// nothing to do
			break;
	}
}
void uart_communication_fsm(){
	switch (communiation_mode) {
		case 0:
			if (timer_flag == 1){
				setTimer(0);
				command_mode = 3;
				communiation_mode = 1;
			}
			break;
		case 1:
			HAL_ADC_Start(&hadc1);
			ADC_Value = HAL_ADC_GetValue(&hadc1);
			HAL_UART_Transmit(&huart2, startData, 4, 1000);
			HAL_UART_Transmit(&huart2, (void *)str, sprintf(str, "%d\n", ADC_Value), 1000);
			HAL_UART_Transmit(&huart2, endData, 1, 1000);
			HAL_UART_Transmit(&huart2, &nl, 1, 100);
			HAL_UART_Transmit(&huart2, &nl, 1, 100);
			communiation_mode = 0;
			command_mode = 0;
			setTimer(0);
			break;
		default:
			break;
	}
}
